'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.operatorLt = operatorLt;
exports.getOperatorPrec = getOperatorPrec;
exports.getOperatorAssoc = getOperatorAssoc;
exports.isUnaryOperator = isUnaryOperator;
exports.isOperator = isOperator;
const unaryOperators = {
  '+': true,
  '-': true,
  '!': true,
  '~': true,
  '++': true,
  '--': true,
  'typeof': true,
  'void': true,
  'delete': true
};
const binaryOperatorPrecedence = {
  '*': 13,
  '/': 13,
  '%': 13,
  '+': 12,
  '-': 12,
  '>>': 11,
  '<<': 11,
  '>>>': 11,
  '<': 10,
  '<=': 10,
  '>': 10,
  '>=': 10,
  'in': 10,
  'instanceof': 10,
  '==': 9,
  '!=': 9,
  '===': 9,
  '!==': 9,
  '&': 8,
  '^': 7,
  '|': 6,
  '&&': 5,
  '||': 4
};

var operatorAssoc = {
  '*': 'left',
  '/': 'left',
  '%': 'left',
  '+': 'left',
  '-': 'left',
  '>>': 'left',
  '<<': 'left',
  '>>>': 'left',
  '<': 'left',
  '<=': 'left',
  '>': 'left',
  '>=': 'left',
  'in': 'left',
  'instanceof': 'left',
  '==': 'left',
  '!=': 'left',
  '===': 'left',
  '!==': 'left',
  '&': 'left',
  '^': 'left',
  '|': 'left',
  '&&': 'left',
  '||': 'left'
};

function operatorLt(left, right, assoc) {
  if (assoc === 'left') {
    return left < right;
  } else {
    return left <= right;
  }
}

function getOperatorPrec(op) {
  return binaryOperatorPrecedence[op];
}
function getOperatorAssoc(op) {
  return operatorAssoc[op];
}

function isUnaryOperator(op) {
  return (op.match('punctuator') || op.match('identifier') || op.match('keyword')) && unaryOperators.hasOwnProperty(op.val());
}

function isOperator(op) {
  if (op.match('punctuator') || op.match('identifier') || op.match('keyword')) {
    return binaryOperatorPrecedence.hasOwnProperty(op) || unaryOperators.hasOwnProperty(op.val());
  }
  return false;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9vcGVyYXRvcnMuanMiXSwibmFtZXMiOlsib3BlcmF0b3JMdCIsImdldE9wZXJhdG9yUHJlYyIsImdldE9wZXJhdG9yQXNzb2MiLCJpc1VuYXJ5T3BlcmF0b3IiLCJpc09wZXJhdG9yIiwidW5hcnlPcGVyYXRvcnMiLCJiaW5hcnlPcGVyYXRvclByZWNlZGVuY2UiLCJvcGVyYXRvckFzc29jIiwibGVmdCIsInJpZ2h0IiwiYXNzb2MiLCJvcCIsIm1hdGNoIiwiaGFzT3duUHJvcGVydHkiLCJ2YWwiXSwibWFwcGluZ3MiOiI7Ozs7O1FBK0RnQkEsVSxHQUFBQSxVO1FBUUFDLGUsR0FBQUEsZTtRQUdBQyxnQixHQUFBQSxnQjtRQUlBQyxlLEdBQUFBLGU7UUFLQUMsVSxHQUFBQSxVO0FBbkZoQixNQUFNQyxpQkFBaUI7QUFDckIsT0FBSyxJQURnQjtBQUVyQixPQUFLLElBRmdCO0FBR3JCLE9BQUssSUFIZ0I7QUFJckIsT0FBSyxJQUpnQjtBQUtyQixRQUFNLElBTGU7QUFNckIsUUFBTSxJQU5lO0FBT3JCLFlBQVUsSUFQVztBQVFyQixVQUFRLElBUmE7QUFTckIsWUFBVTtBQVRXLENBQXZCO0FBV0EsTUFBTUMsMkJBQTJCO0FBQy9CLE9BQUssRUFEMEI7QUFFL0IsT0FBSyxFQUYwQjtBQUcvQixPQUFLLEVBSDBCO0FBSS9CLE9BQUssRUFKMEI7QUFLL0IsT0FBSyxFQUwwQjtBQU0vQixRQUFNLEVBTnlCO0FBTy9CLFFBQU0sRUFQeUI7QUFRL0IsU0FBTyxFQVJ3QjtBQVMvQixPQUFLLEVBVDBCO0FBVS9CLFFBQU0sRUFWeUI7QUFXL0IsT0FBSyxFQVgwQjtBQVkvQixRQUFNLEVBWnlCO0FBYS9CLFFBQU0sRUFieUI7QUFjL0IsZ0JBQWMsRUFkaUI7QUFlL0IsUUFBTSxDQWZ5QjtBQWdCL0IsUUFBTSxDQWhCeUI7QUFpQi9CLFNBQU8sQ0FqQndCO0FBa0IvQixTQUFPLENBbEJ3QjtBQW1CL0IsT0FBSyxDQW5CMEI7QUFvQi9CLE9BQUssQ0FwQjBCO0FBcUIvQixPQUFLLENBckIwQjtBQXNCL0IsUUFBTSxDQXRCeUI7QUF1Qi9CLFFBQU07QUF2QnlCLENBQWpDOztBQTBCQSxJQUFJQyxnQkFBZ0I7QUFDbEIsT0FBSyxNQURhO0FBRWxCLE9BQUssTUFGYTtBQUdsQixPQUFLLE1BSGE7QUFJbEIsT0FBSyxNQUphO0FBS2xCLE9BQUssTUFMYTtBQU1sQixRQUFNLE1BTlk7QUFPbEIsUUFBTSxNQVBZO0FBUWxCLFNBQU8sTUFSVztBQVNsQixPQUFLLE1BVGE7QUFVbEIsUUFBTSxNQVZZO0FBV2xCLE9BQUssTUFYYTtBQVlsQixRQUFNLE1BWlk7QUFhbEIsUUFBTSxNQWJZO0FBY2xCLGdCQUFjLE1BZEk7QUFlbEIsUUFBTSxNQWZZO0FBZ0JsQixRQUFNLE1BaEJZO0FBaUJsQixTQUFPLE1BakJXO0FBa0JsQixTQUFPLE1BbEJXO0FBbUJsQixPQUFLLE1BbkJhO0FBb0JsQixPQUFLLE1BcEJhO0FBcUJsQixPQUFLLE1BckJhO0FBc0JsQixRQUFNLE1BdEJZO0FBdUJsQixRQUFNO0FBdkJZLENBQXBCOztBQTBCTyxTQUFTUCxVQUFULENBQW9CUSxJQUFwQixFQUEwQkMsS0FBMUIsRUFBaUNDLEtBQWpDLEVBQXdDO0FBQzdDLE1BQUlBLFVBQVUsTUFBZCxFQUFzQjtBQUNwQixXQUFPRixPQUFPQyxLQUFkO0FBQ0QsR0FGRCxNQUVPO0FBQ0wsV0FBT0QsUUFBUUMsS0FBZjtBQUNEO0FBQ0Y7O0FBRU0sU0FBU1IsZUFBVCxDQUF5QlUsRUFBekIsRUFBNkI7QUFDbEMsU0FBT0wseUJBQXlCSyxFQUF6QixDQUFQO0FBQ0Q7QUFDTSxTQUFTVCxnQkFBVCxDQUEwQlMsRUFBMUIsRUFBOEI7QUFDbkMsU0FBT0osY0FBY0ksRUFBZCxDQUFQO0FBQ0Q7O0FBRU0sU0FBU1IsZUFBVCxDQUF5QlEsRUFBekIsRUFBNkI7QUFDbEMsU0FBTyxDQUFDQSxHQUFHQyxLQUFILENBQVMsWUFBVCxLQUEwQkQsR0FBR0MsS0FBSCxDQUFTLFlBQVQsQ0FBMUIsSUFBb0RELEdBQUdDLEtBQUgsQ0FBUyxTQUFULENBQXJELEtBQ0RQLGVBQWVRLGNBQWYsQ0FBOEJGLEdBQUdHLEdBQUgsRUFBOUIsQ0FETjtBQUVEOztBQUVNLFNBQVNWLFVBQVQsQ0FBb0JPLEVBQXBCLEVBQXdCO0FBQzdCLE1BQUlBLEdBQUdDLEtBQUgsQ0FBUyxZQUFULEtBQTBCRCxHQUFHQyxLQUFILENBQVMsWUFBVCxDQUExQixJQUFvREQsR0FBR0MsS0FBSCxDQUFTLFNBQVQsQ0FBeEQsRUFBNkU7QUFDM0UsV0FBT04seUJBQXlCTyxjQUF6QixDQUF3Q0YsRUFBeEMsS0FBK0NOLGVBQWVRLGNBQWYsQ0FBOEJGLEdBQUdHLEdBQUgsRUFBOUIsQ0FBdEQ7QUFDRDtBQUNELFNBQU8sS0FBUDtBQUNEIiwiZmlsZSI6Im9wZXJhdG9ycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHVuYXJ5T3BlcmF0b3JzID0ge1xuICAnKyc6IHRydWUsXG4gICctJzogdHJ1ZSxcbiAgJyEnOiB0cnVlLFxuICAnfic6IHRydWUsXG4gICcrKyc6IHRydWUsXG4gICctLSc6IHRydWUsXG4gICd0eXBlb2YnOiB0cnVlLFxuICAndm9pZCc6IHRydWUsXG4gICdkZWxldGUnOiB0cnVlLFxufTtcbmNvbnN0IGJpbmFyeU9wZXJhdG9yUHJlY2VkZW5jZSA9IHtcbiAgJyonOiAxMyxcbiAgJy8nOiAxMyxcbiAgJyUnOiAxMyxcbiAgJysnOiAxMixcbiAgJy0nOiAxMixcbiAgJz4+JzogMTEsXG4gICc8PCc6IDExLFxuICAnPj4+JzogMTEsXG4gICc8JzogMTAsXG4gICc8PSc6IDEwLFxuICAnPic6IDEwLFxuICAnPj0nOiAxMCxcbiAgJ2luJzogMTAsXG4gICdpbnN0YW5jZW9mJzogMTAsXG4gICc9PSc6IDksXG4gICchPSc6IDksXG4gICc9PT0nOiA5LFxuICAnIT09JzogOSxcbiAgJyYnOiA4LFxuICAnXic6IDcsXG4gICd8JzogNixcbiAgJyYmJzogNSxcbiAgJ3x8JzogNCxcbn07XG5cbnZhciBvcGVyYXRvckFzc29jID0ge1xuICAnKic6ICdsZWZ0JyxcbiAgJy8nOiAnbGVmdCcsXG4gICclJzogJ2xlZnQnLFxuICAnKyc6ICdsZWZ0JyxcbiAgJy0nOiAnbGVmdCcsXG4gICc+Pic6ICdsZWZ0JyxcbiAgJzw8JzogJ2xlZnQnLFxuICAnPj4+JzogJ2xlZnQnLFxuICAnPCc6ICdsZWZ0JyxcbiAgJzw9JzogJ2xlZnQnLFxuICAnPic6ICdsZWZ0JyxcbiAgJz49JzogJ2xlZnQnLFxuICAnaW4nOiAnbGVmdCcsXG4gICdpbnN0YW5jZW9mJzogJ2xlZnQnLFxuICAnPT0nOiAnbGVmdCcsXG4gICchPSc6ICdsZWZ0JyxcbiAgJz09PSc6ICdsZWZ0JyxcbiAgJyE9PSc6ICdsZWZ0JyxcbiAgJyYnOiAnbGVmdCcsXG4gICdeJzogJ2xlZnQnLFxuICAnfCc6ICdsZWZ0JyxcbiAgJyYmJzogJ2xlZnQnLFxuICAnfHwnOiAnbGVmdCcsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gb3BlcmF0b3JMdChsZWZ0LCByaWdodCwgYXNzb2MpIHtcbiAgaWYgKGFzc29jID09PSAnbGVmdCcpIHtcbiAgICByZXR1cm4gbGVmdCA8IHJpZ2h0O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBsZWZ0IDw9IHJpZ2h0O1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRPcGVyYXRvclByZWMob3ApIHtcbiAgcmV0dXJuIGJpbmFyeU9wZXJhdG9yUHJlY2VkZW5jZVtvcF07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0T3BlcmF0b3JBc3NvYyhvcCkge1xuICByZXR1cm4gb3BlcmF0b3JBc3NvY1tvcF07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1VuYXJ5T3BlcmF0b3Iob3ApIHtcbiAgcmV0dXJuIChvcC5tYXRjaCgncHVuY3R1YXRvcicpIHx8IG9wLm1hdGNoKCdpZGVudGlmaWVyJykgfHwgb3AubWF0Y2goJ2tleXdvcmQnKSkgJiZcbiAgICAgICAgdW5hcnlPcGVyYXRvcnMuaGFzT3duUHJvcGVydHkob3AudmFsKCkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNPcGVyYXRvcihvcCkge1xuICBpZiAob3AubWF0Y2goJ3B1bmN0dWF0b3InKSB8fCBvcC5tYXRjaCgnaWRlbnRpZmllcicpIHx8IG9wLm1hdGNoKCdrZXl3b3JkJykpIHtcbiAgICByZXR1cm4gYmluYXJ5T3BlcmF0b3JQcmVjZWRlbmNlLmhhc093blByb3BlcnR5KG9wKSB8fCB1bmFyeU9wZXJhdG9ycy5oYXNPd25Qcm9wZXJ0eShvcC52YWwoKSk7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuIl19