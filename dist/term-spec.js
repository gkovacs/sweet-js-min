"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const Term_1157=Object.create(Object.prototype,{spec:{value:{},writable:!0,configurable:!1,enumerable:!0},fields:{value:[],writable:!1,configurable:!1,enumerable:!0}}),BindingWithDefault_1158=Object.create(Term_1157,{fields:{value:["binding","init"],writable:!1,configurable:!1,enumerable:!0}});BindingWithDefault_1158.spec.BindingWithDefault=BindingWithDefault_1158;const BindingIdentifier_1159=Object.create(Term_1157,{fields:{value:["name"],writable:!1,configurable:!1,enumerable:!0}});BindingIdentifier_1159.spec.BindingIdentifier=BindingIdentifier_1159;const ArrayBinding_1160=Object.create(Term_1157,{fields:{value:["elements","restElement"],writable:!1,configurable:!1,enumerable:!0}});ArrayBinding_1160.spec.ArrayBinding=ArrayBinding_1160;const ObjectBinding_1161=Object.create(Term_1157,{fields:{value:["properties"],writable:!1,configurable:!1,enumerable:!0}});ObjectBinding_1161.spec.ObjectBinding=ObjectBinding_1161;const BindingPropertyIdentifier_1162=Object.create(Term_1157,{fields:{value:["binding","init"],writable:!1,configurable:!1,enumerable:!0}});BindingPropertyIdentifier_1162.spec.BindingPropertyIdentifier=BindingPropertyIdentifier_1162;const BindingPropertyProperty_1163=Object.create(Term_1157,{fields:{value:["name","binding"],writable:!1,configurable:!1,enumerable:!0}});BindingPropertyProperty_1163.spec.BindingPropertyProperty=BindingPropertyProperty_1163;const Statement_1164=Object.create(Term_1157,{fields:{value:[],writable:!1,configurable:!1,enumerable:!0}});Statement_1164.spec.Statement=Statement_1164;const Expression_1165=Object.create(Term_1157,{fields:{value:[],writable:!1,configurable:!1,enumerable:!0}});Expression_1165.spec.Expression=Expression_1165;const ClassExpression_1166=Object.create(Expression_1165,{fields:{value:["name","super","elements"],writable:!1,configurable:!1,enumerable:!0}});ClassExpression_1166.spec.ClassExpression=ClassExpression_1166;const ClassDeclaration_1167=Object.create(Statement_1164,{fields:{value:["name","super","elements"],writable:!1,configurable:!1,enumerable:!0}});ClassDeclaration_1167.spec.ClassDeclaration=ClassDeclaration_1167;const ClassElement_1168=Object.create(Term_1157,{fields:{value:["isStatic","method"],writable:!1,configurable:!1,enumerable:!0}});ClassElement_1168.spec.ClassElement=ClassElement_1168;const Module_1169=Object.create(Term_1157,{fields:{value:["directives","items"],writable:!1,configurable:!1,enumerable:!0}});Module_1169.spec.Module=Module_1169;const Import_1170=Object.create(Term_1157,{fields:{value:["moduleSpecifier","defaultBinding","namedImports","forSyntax"],writable:!1,configurable:!1,enumerable:!0}});Import_1170.spec.Import=Import_1170;const ImportNamespace_1171=Object.create(Term_1157,{fields:{value:["moduleSpecifier","defaultBinding","namespaceBinding"],writable:!1,configurable:!1,enumerable:!0}});ImportNamespace_1171.spec.ImportNamespace=ImportNamespace_1171;const ImportSpecifier_1172=Object.create(Term_1157,{fields:{value:["name","binding"],writable:!1,configurable:!1,enumerable:!0}});ImportSpecifier_1172.spec.ImportSpecifier=ImportSpecifier_1172;const ExportAllFrom_1173=Object.create(Term_1157,{fields:{value:["moduleSpecifier"],writable:!1,configurable:!1,enumerable:!0}});ExportAllFrom_1173.spec.ExportAllFrom=ExportAllFrom_1173;const ExportFrom_1174=Object.create(Term_1157,{fields:{value:["namedExports","moduleSpecifier"],writable:!1,configurable:!1,enumerable:!0}});ExportFrom_1174.spec.ExportFrom=ExportFrom_1174;const Export_1175=Object.create(Term_1157,{fields:{value:["declaration"],writable:!1,configurable:!1,enumerable:!0}});Export_1175.spec.Export=Export_1175;const ExportDefault_1176=Object.create(Term_1157,{fields:{value:["body"],writable:!1,configurable:!1,enumerable:!0}});ExportDefault_1176.spec.ExportDefault=ExportDefault_1176;const ExportSpecifier_1177=Object.create(Term_1157,{fields:{value:["name","exportedName"],writable:!1,configurable:!1,enumerable:!0}});ExportSpecifier_1177.spec.ExportSpecifier=ExportSpecifier_1177;const Method_1178=Object.create(Term_1157,{fields:{value:["name","body","isGenerator","params"],writable:!1,configurable:!1,enumerable:!0}});Method_1178.spec.Method=Method_1178;const Getter_1179=Object.create(Term_1157,{fields:{value:["name","body"],writable:!1,configurable:!1,enumerable:!0}});Getter_1179.spec.Getter=Getter_1179;const Setter_1180=Object.create(Term_1157,{fields:{value:["name","body","param"],writable:!1,configurable:!1,enumerable:!0}});Setter_1180.spec.Setter=Setter_1180;const DataProperty_1181=Object.create(Term_1157,{fields:{value:["name","expression"],writable:!1,configurable:!1,enumerable:!0}});DataProperty_1181.spec.DataProperty=DataProperty_1181;const ShorthandProperty_1182=Object.create(Term_1157,{fields:{value:["expression"],writable:!1,configurable:!1,enumerable:!0}});ShorthandProperty_1182.spec.ShorthandProperty=ShorthandProperty_1182;const StaticPropertyName_1183=Object.create(Term_1157,{fields:{value:["value"],writable:!1,configurable:!1,enumerable:!0}});StaticPropertyName_1183.spec.StaticPropertyName=StaticPropertyName_1183;const LiteralBooleanExpression_1184=Object.create(Expression_1165,{fields:{value:["value"],writable:!1,configurable:!1,enumerable:!0}});LiteralBooleanExpression_1184.spec.LiteralBooleanExpression=LiteralBooleanExpression_1184;const LiteralInfinityExpression_1185=Object.create(Expression_1165,{fields:{value:[],writable:!1,configurable:!1,enumerable:!0}});LiteralInfinityExpression_1185.spec.LiteralInfinityExpression=LiteralInfinityExpression_1185;const LiteralNullExpression_1186=Object.create(Expression_1165,{fields:{value:[],writable:!1,configurable:!1,enumerable:!0}});LiteralNullExpression_1186.spec.LiteralNullExpression=LiteralNullExpression_1186;const LiteralNumericExpression_1187=Object.create(Expression_1165,{fields:{value:["value"],writable:!1,configurable:!1,enumerable:!0}});LiteralNumericExpression_1187.spec.LiteralNumericExpression=LiteralNumericExpression_1187;const LiteralRegExpExpression_1188=Object.create(Expression_1165,{fields:{value:["pattern","flags"],writable:!1,configurable:!1,enumerable:!0}});LiteralRegExpExpression_1188.spec.LiteralRegExpExpression=LiteralRegExpExpression_1188;const LiteralStringExpression_1189=Object.create(Expression_1165,{fields:{value:["value"],writable:!1,configurable:!1,enumerable:!0}});LiteralStringExpression_1189.spec.LiteralStringExpression=LiteralStringExpression_1189;const ArrayExpression_1190=Object.create(Expression_1165,{fields:{value:["elements"],writable:!1,configurable:!1,enumerable:!0}});ArrayExpression_1190.spec.ArrayExpression=ArrayExpression_1190;const ArrowExpression_1191=Object.create(Expression_1165,{fields:{value:["params","body"],writable:!1,configurable:!1,enumerable:!0}});ArrowExpression_1191.spec.ArrowExpression=ArrowExpression_1191;const AssignmentExpression_1192=Object.create(Expression_1165,{fields:{value:["binding","expression"],writable:!1,configurable:!1,enumerable:!0}});AssignmentExpression_1192.spec.AssignmentExpression=AssignmentExpression_1192;const BinaryExpression_1193=Object.create(Expression_1165,{fields:{value:["operator","left","right"],writable:!1,configurable:!1,enumerable:!0}});BinaryExpression_1193.spec.BinaryExpression=BinaryExpression_1193;const CallExpression_1194=Object.create(Expression_1165,{fields:{value:["callee","arguments"],writable:!1,configurable:!1,enumerable:!0}});CallExpression_1194.spec.CallExpression=CallExpression_1194;const ComputedAssignmentExpression_1195=Object.create(Expression_1165,{fields:{value:["operator","binding","expression"],writable:!1,configurable:!1,enumerable:!0}});ComputedAssignmentExpression_1195.spec.ComputedAssignmentExpression=ComputedAssignmentExpression_1195;const ComputedMemberExpression_1196=Object.create(Expression_1165,{fields:{value:["object","expression"],writable:!1,configurable:!1,enumerable:!0}});ComputedMemberExpression_1196.spec.ComputedMemberExpression=ComputedMemberExpression_1196;const ConditionalExpression_1197=Object.create(Expression_1165,{fields:{value:["test","consequent","alternate"],writable:!1,configurable:!1,enumerable:!0}});ConditionalExpression_1197.spec.ConditionalExpression=ConditionalExpression_1197;const FunctionExpression_1198=Object.create(Expression_1165,{fields:{value:["name","isGenerator","params","body"],writable:!1,configurable:!1,enumerable:!0}});FunctionExpression_1198.spec.FunctionExpression=FunctionExpression_1198;const IdentifierExpression_1199=Object.create(Expression_1165,{fields:{value:["name"],writable:!1,configurable:!1,enumerable:!0}});IdentifierExpression_1199.spec.IdentifierExpression=IdentifierExpression_1199;const NewExpression_1200=Object.create(Expression_1165,{fields:{value:["callee","arguments"],writable:!1,configurable:!1,enumerable:!0}});NewExpression_1200.spec.NewExpression=NewExpression_1200;const NewTargetExpression_1201=Object.create(Expression_1165,{fields:{value:[],writable:!1,configurable:!1,enumerable:!0}});NewTargetExpression_1201.spec.NewTargetExpression=NewTargetExpression_1201;const ObjectExpression_1202=Object.create(Expression_1165,{fields:{value:["properties"],writable:!1,configurable:!1,enumerable:!0}});ObjectExpression_1202.spec.ObjectExpression=ObjectExpression_1202;const UnaryExpression_1203=Object.create(Expression_1165,{fields:{value:["operator","operand"],writable:!1,configurable:!1,enumerable:!0}});UnaryExpression_1203.spec.UnaryExpression=UnaryExpression_1203;const StaticMemberExpression_1204=Object.create(Expression_1165,{fields:{value:["object","property"],writable:!1,configurable:!1,enumerable:!0}});StaticMemberExpression_1204.spec.StaticMemberExpression=StaticMemberExpression_1204;const TemplateExpression_1205=Object.create(Expression_1165,{fields:{value:["tag","elements"],writable:!1,configurable:!1,enumerable:!0}});TemplateExpression_1205.spec.TemplateExpression=TemplateExpression_1205;const ThisExpression_1206=Object.create(Expression_1165,{fields:{value:[],writable:!1,configurable:!1,enumerable:!0}});ThisExpression_1206.spec.ThisExpression=ThisExpression_1206;const UpdateExpression_1207=Object.create(Expression_1165,{fields:{value:["isPrefix","operator","operand"],writable:!1,configurable:!1,enumerable:!0}});UpdateExpression_1207.spec.UpdateExpression=UpdateExpression_1207;const YieldExpression_1208=Object.create(Expression_1165,{fields:{value:["expression"],writable:!1,configurable:!1,enumerable:!0}});YieldExpression_1208.spec.YieldExpression=YieldExpression_1208;const YieldGeneratorExpression_1209=Object.create(Expression_1165,{fields:{value:["expression"],writable:!1,configurable:!1,enumerable:!0}});YieldGeneratorExpression_1209.spec.YieldGeneratorExpression=YieldGeneratorExpression_1209;const ParenthesizedExpression_1210=Object.create(Expression_1165,{fields:{value:["inner"],writable:!1,configurable:!1,enumerable:!0}});ParenthesizedExpression_1210.spec.ParenthesizedExpression=ParenthesizedExpression_1210;const BlockStatement_1211=Object.create(Statement_1164,{fields:{value:["block"],writable:!1,configurable:!1,enumerable:!0}});BlockStatement_1211.spec.BlockStatement=BlockStatement_1211;const BreakStatement_1212=Object.create(Statement_1164,{fields:{value:["label"],writable:!1,configurable:!1,enumerable:!0}});BreakStatement_1212.spec.BreakStatement=BreakStatement_1212;const ContinueStatement_1213=Object.create(Statement_1164,{fields:{value:["label"],writable:!1,configurable:!1,enumerable:!0}});ContinueStatement_1213.spec.ContinueStatement=ContinueStatement_1213;const CompoundAssignmentExpression_1214=Object.create(Statement_1164,{fields:{value:["binding","operator","expression"],writable:!1,configurable:!1,enumerable:!0}});CompoundAssignmentExpression_1214.spec.CompoundAssignmentExpression=CompoundAssignmentExpression_1214;const DebuggerStatement_1215=Object.create(Statement_1164,{fields:{value:[],writable:!1,configurable:!1,enumerable:!0}});DebuggerStatement_1215.spec.DebuggerStatement=DebuggerStatement_1215;const DoWhileStatement_1216=Object.create(Statement_1164,{fields:{value:["test","body"],writable:!1,configurable:!1,enumerable:!0}});DoWhileStatement_1216.spec.DoWhileStatement=DoWhileStatement_1216;const EmptyStatement_1217=Object.create(Statement_1164,{fields:{value:[],writable:!1,configurable:!1,enumerable:!0}});EmptyStatement_1217.spec.EmptyStatement=EmptyStatement_1217;const ExpressionStatement_1218=Object.create(Statement_1164,{fields:{value:["expression"],writable:!1,configurable:!1,enumerable:!0}});ExpressionStatement_1218.spec.ExpressionStatement=ExpressionStatement_1218;const ForInStatement_1219=Object.create(Statement_1164,{fields:{value:["left","right","body"],writable:!1,configurable:!1,enumerable:!0}});ForInStatement_1219.spec.ForInStatement=ForInStatement_1219;const ForOfStatement_1220=Object.create(Statement_1164,{fields:{value:["left","right","body"],writable:!1,configurable:!1,enumerable:!0}});ForOfStatement_1220.spec.ForOfStatement=ForOfStatement_1220;const ForStatement_1221=Object.create(Statement_1164,{fields:{value:["init","test","update","body"],writable:!1,configurable:!1,enumerable:!0}});ForStatement_1221.spec.ForStatement=ForStatement_1221;const IfStatement_1222=Object.create(Statement_1164,{fields:{value:["test","consequent","alternate"],writable:!1,configurable:!1,enumerable:!0}});IfStatement_1222.spec.IfStatement=IfStatement_1222;const LabeledStatement_1223=Object.create(Statement_1164,{fields:{value:["label","body"],writable:!1,configurable:!1,enumerable:!0}});LabeledStatement_1223.spec.LabeledStatement=LabeledStatement_1223;const ReturnStatement_1224=Object.create(Statement_1164,{fields:{value:["expression"],writable:!1,configurable:!1,enumerable:!0}});ReturnStatement_1224.spec.ReturnStatement=ReturnStatement_1224;const SwitchStatement_1225=Object.create(Statement_1164,{fields:{value:["discriminant","cases"],writable:!1,configurable:!1,enumerable:!0}});SwitchStatement_1225.spec.SwitchStatement=SwitchStatement_1225;const SwitchStatementWithDefault_1226=Object.create(Statement_1164,{fields:{value:["discriminant","preDefaultCases","defaultCase","postDefaultCases"],writable:!1,configurable:!1,enumerable:!0}});SwitchStatementWithDefault_1226.spec.SwitchStatementWithDefault=SwitchStatementWithDefault_1226;const ThrowStatement_1227=Object.create(Statement_1164,{fields:{value:["expression"],writable:!1,configurable:!1,enumerable:!0}});ThrowStatement_1227.spec.ThrowStatement=ThrowStatement_1227;const TryCatchStatement_1228=Object.create(Statement_1164,{fields:{value:["body","catchClause"],writable:!1,configurable:!1,enumerable:!0}});TryCatchStatement_1228.spec.TryCatchStatement=TryCatchStatement_1228;const TryFinallyStatement_1229=Object.create(Statement_1164,{fields:{value:["body","catchClause","finalizer"],writable:!1,configurable:!1,enumerable:!0}});TryFinallyStatement_1229.spec.TryFinallyStatement=TryFinallyStatement_1229;const VariableDeclarationStatement_1230=Object.create(Statement_1164,{fields:{value:["declaration"],writable:!1,configurable:!1,enumerable:!0}});VariableDeclarationStatement_1230.spec.VariableDeclarationStatement=VariableDeclarationStatement_1230;const WithStatement_1231=Object.create(Statement_1164,{fields:{value:["object","body"],writable:!1,configurable:!1,enumerable:!0}});WithStatement_1231.spec.WithStatement=WithStatement_1231;const WhileStatement_1232=Object.create(Statement_1164,{fields:{value:["test","body"],writable:!1,configurable:!1,enumerable:!0}});WhileStatement_1232.spec.WhileStatement=WhileStatement_1232;const Pragma_1233=Object.create(Term_1157,{fields:{value:["kind","items"],writable:!1,configurable:!1,enumerable:!0}});Pragma_1233.spec.Pragma=Pragma_1233;const Block_1234=Object.create(Term_1157,{fields:{value:["statements"],writable:!1,configurable:!1,enumerable:!0}});Block_1234.spec.Block=Block_1234;const CatchClause_1235=Object.create(Term_1157,{fields:{value:["binding","body"],writable:!1,configurable:!1,enumerable:!0}});CatchClause_1235.spec.CatchClause=CatchClause_1235;const Directive_1236=Object.create(Term_1157,{fields:{value:["rawValue"],writable:!1,configurable:!1,enumerable:!0}});Directive_1236.spec.Directive=Directive_1236;const FormalParameters_1237=Object.create(Term_1157,{fields:{value:["items","rest"],writable:!1,configurable:!1,enumerable:!0}});FormalParameters_1237.spec.FormalParameters=FormalParameters_1237;const FunctionBody_1238=Object.create(Term_1157,{fields:{value:["directives","statements"],writable:!1,configurable:!1,enumerable:!0}});FunctionBody_1238.spec.FunctionBody=FunctionBody_1238;const FunctionDeclaration_1239=Object.create(Statement_1164,{fields:{value:["name","isGenerator","params","body"],writable:!1,configurable:!1,enumerable:!0}});FunctionDeclaration_1239.spec.FunctionDeclaration=FunctionDeclaration_1239;const Script_1240=Object.create(Term_1157,{fields:{value:["directives","statements"],writable:!1,configurable:!1,enumerable:!0}});Script_1240.spec.Script=Script_1240;const SpreadElement_1241=Object.create(Term_1157,{fields:{value:["expression"],writable:!1,configurable:!1,enumerable:!0}});SpreadElement_1241.spec.SpreadElement=SpreadElement_1241;const Super_1242=Object.create(Term_1157,{fields:{value:[],writable:!1,configurable:!1,enumerable:!0}});Super_1242.spec.Super=Super_1242;const SwitchCase_1243=Object.create(Term_1157,{fields:{value:["test","consequent"],writable:!1,configurable:!1,enumerable:!0}});SwitchCase_1243.spec.SwitchCase=SwitchCase_1243;const SwitchDefault_1244=Object.create(Term_1157,{fields:{value:["consequent"],writable:!1,configurable:!1,enumerable:!0}});SwitchDefault_1244.spec.SwitchDefault=SwitchDefault_1244;const TemplateElement_1245=Object.create(Term_1157,{fields:{value:["rawValue"],writable:!1,configurable:!1,enumerable:!0}});TemplateElement_1245.spec.TemplateElement=TemplateElement_1245;const SyntaxTemplate_1246=Object.create(Term_1157,{fields:{value:["template"],writable:!1,configurable:!1,enumerable:!0}});SyntaxTemplate_1246.spec.SyntaxTemplate=SyntaxTemplate_1246;const VariableDeclaration_1247=Object.create(Term_1157,{fields:{value:["kind","declarators"],writable:!1,configurable:!1,enumerable:!0}});VariableDeclaration_1247.spec.VariableDeclaration=VariableDeclaration_1247;const VariableDeclarator_1248=Object.create(Term_1157,{fields:{value:["binding","init"],writable:!1,configurable:!1,enumerable:!0}});VariableDeclarator_1248.spec.VariableDeclarator=VariableDeclarator_1248,exports.default=Term_1157;

