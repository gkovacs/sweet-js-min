'use strict';Object.defineProperty(exports,'__esModule',{value:!0}),exports.CompiletimeTransform=exports.VarBindingTransform=exports.ModuleNamespaceTransform=exports.ReturnStatementTransform=exports.SyntaxDeclTransform=exports.SyntaxrecDeclTransform=exports.DebuggerTransform=exports.WithTransform=exports.DoTransform=exports.ContinueTransform=exports.BreakTransform=exports.SwitchTransform=exports.ForTransform=exports.IfTransform=exports.WhileTransform=exports.TryTransform=exports.ConstDeclTransform=exports.LetDeclTransform=exports.ThrowTransform=exports.NewTransform=exports.VariableDeclTransform=exports.FunctionDeclTransform=void 0;var _sweetModule=require('./sweet-module'),_sweetModule2=_interopRequireDefault(_sweetModule),_syntax=require('./syntax'),_syntax2=_interopRequireDefault(_syntax);function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}class FunctionDeclTransform{}exports.FunctionDeclTransform=FunctionDeclTransform;class VariableDeclTransform{}exports.VariableDeclTransform=VariableDeclTransform;class NewTransform{}exports.NewTransform=NewTransform;class ThrowTransform{}exports.ThrowTransform=ThrowTransform;class LetDeclTransform{}exports.LetDeclTransform=LetDeclTransform;class ConstDeclTransform{}exports.ConstDeclTransform=ConstDeclTransform;class TryTransform{}exports.TryTransform=TryTransform;class WhileTransform{}exports.WhileTransform=WhileTransform;class IfTransform{}exports.IfTransform=IfTransform;class ForTransform{}exports.ForTransform=ForTransform;class SwitchTransform{}exports.SwitchTransform=SwitchTransform;class BreakTransform{}exports.BreakTransform=BreakTransform;class ContinueTransform{}exports.ContinueTransform=ContinueTransform;class DoTransform{}exports.DoTransform=DoTransform;class WithTransform{}exports.WithTransform=WithTransform;class DebuggerTransform{}exports.DebuggerTransform=DebuggerTransform;class SyntaxrecDeclTransform{}exports.SyntaxrecDeclTransform=SyntaxrecDeclTransform;class SyntaxDeclTransform{}exports.SyntaxDeclTransform=SyntaxDeclTransform;class ReturnStatementTransform{}exports.ReturnStatementTransform=ReturnStatementTransform;class ModuleNamespaceTransform{constructor(a,b){this.namespace=a,this.mod=b}}exports.ModuleNamespaceTransform=ModuleNamespaceTransform;class VarBindingTransform{constructor(a){this.id=a}}exports.VarBindingTransform=VarBindingTransform;class CompiletimeTransform{constructor(a){this.value=a}}exports.CompiletimeTransform=CompiletimeTransform;

