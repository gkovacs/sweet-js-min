'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isClassDeclaration = exports.isFunctionDeclaration = exports.isCompiletimeStatement = exports.isSyntaxDeclarationStatement = exports.isVariableDeclarationStatement = exports.isSyntaxVariableDeclartion = exports.isVariableDeclarator = exports.isVariableDeclaration = exports.isExportFrom = exports.isExportDefault = exports.isExport = exports.isExportDeclaration = exports.isImportDeclaration = undefined;

var _sweetSpec = require('sweet-spec');

var T = _interopRequireWildcard(_sweetSpec);

var _ramda = require('ramda');

var _ = _interopRequireWildcard(_ramda);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

const isImportDeclaration = exports.isImportDeclaration = _.is(T.ImportDeclaration);

const isExportDeclaration = exports.isExportDeclaration = _.is(T.ExportDeclaration);
const isExport = exports.isExport = _.is(T.Export);
const isExportDefault = exports.isExportDefault = _.is(T.ExportDefault);
const isExportFrom = exports.isExportFrom = _.is(T.ExportFrom);

const isVariableDeclaration = exports.isVariableDeclaration = _.is(T.VariableDeclaration);
const isVariableDeclarator = exports.isVariableDeclarator = _.is(T.VariableDeclarator);
const isSyntaxVariableDeclartion = exports.isSyntaxVariableDeclartion = _.both(isVariableDeclaration, _.either(_.propEq('kind', 'syntax'), _.propEq('kind', 'syntaxrec')));

const isVariableDeclarationStatement = exports.isVariableDeclarationStatement = _.is(T.VariableDeclarationStatement);
const isSyntaxDeclarationStatement = exports.isSyntaxDeclarationStatement = term => {
  // syntax m = ...
  // syntaxrec m = ...
  return isVariableDeclarationStatement(term) && isSyntaxVariableDeclartion(term.declaration);
};

const isCompiletimeStatement = exports.isCompiletimeStatement = isSyntaxDeclarationStatement;

const isFunctionDeclaration = exports.isFunctionDeclaration = _.is(T.FunctionDeclaration);
const isClassDeclaration = exports.isClassDeclaration = _.is(T.ClassDeclaration);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zd2VldC1zcGVjLXV0aWxzLmpzIl0sIm5hbWVzIjpbIlQiLCJfIiwiaXNJbXBvcnREZWNsYXJhdGlvbiIsImlzIiwiSW1wb3J0RGVjbGFyYXRpb24iLCJpc0V4cG9ydERlY2xhcmF0aW9uIiwiRXhwb3J0RGVjbGFyYXRpb24iLCJpc0V4cG9ydCIsIkV4cG9ydCIsImlzRXhwb3J0RGVmYXVsdCIsIkV4cG9ydERlZmF1bHQiLCJpc0V4cG9ydEZyb20iLCJFeHBvcnRGcm9tIiwiaXNWYXJpYWJsZURlY2xhcmF0aW9uIiwiVmFyaWFibGVEZWNsYXJhdGlvbiIsImlzVmFyaWFibGVEZWNsYXJhdG9yIiwiVmFyaWFibGVEZWNsYXJhdG9yIiwiaXNTeW50YXhWYXJpYWJsZURlY2xhcnRpb24iLCJib3RoIiwiZWl0aGVyIiwicHJvcEVxIiwiaXNWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50IiwiVmFyaWFibGVEZWNsYXJhdGlvblN0YXRlbWVudCIsImlzU3ludGF4RGVjbGFyYXRpb25TdGF0ZW1lbnQiLCJ0ZXJtIiwiZGVjbGFyYXRpb24iLCJpc0NvbXBpbGV0aW1lU3RhdGVtZW50IiwiaXNGdW5jdGlvbkRlY2xhcmF0aW9uIiwiRnVuY3Rpb25EZWNsYXJhdGlvbiIsImlzQ2xhc3NEZWNsYXJhdGlvbiIsIkNsYXNzRGVjbGFyYXRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7SUFBWUEsQzs7QUFDWjs7SUFBWUMsQzs7OztBQUVMLE1BQU1DLG9EQUFzQkQsRUFBRUUsRUFBRixDQUFLSCxFQUFFSSxpQkFBUCxDQUE1Qjs7QUFFQSxNQUFNQyxvREFBc0JKLEVBQUVFLEVBQUYsQ0FBS0gsRUFBRU0saUJBQVAsQ0FBNUI7QUFDQSxNQUFNQyw4QkFBV04sRUFBRUUsRUFBRixDQUFLSCxFQUFFUSxNQUFQLENBQWpCO0FBQ0EsTUFBTUMsNENBQWtCUixFQUFFRSxFQUFGLENBQUtILEVBQUVVLGFBQVAsQ0FBeEI7QUFDQSxNQUFNQyxzQ0FBZVYsRUFBRUUsRUFBRixDQUFLSCxFQUFFWSxVQUFQLENBQXJCOztBQUVBLE1BQU1DLHdEQUF3QlosRUFBRUUsRUFBRixDQUFLSCxFQUFFYyxtQkFBUCxDQUE5QjtBQUNBLE1BQU1DLHNEQUF1QmQsRUFBRUUsRUFBRixDQUFLSCxFQUFFZ0Isa0JBQVAsQ0FBN0I7QUFDQSxNQUFNQyxrRUFBNkJoQixFQUFFaUIsSUFBRixDQUN4Q0wscUJBRHdDLEVBRXhDWixFQUFFa0IsTUFBRixDQUFTbEIsRUFBRW1CLE1BQUYsQ0FBUyxNQUFULEVBQWlCLFFBQWpCLENBQVQsRUFDU25CLEVBQUVtQixNQUFGLENBQVMsTUFBVCxFQUFpQixXQUFqQixDQURULENBRndDLENBQW5DOztBQU1BLE1BQU1DLDBFQUFpQ3BCLEVBQUVFLEVBQUYsQ0FBS0gsRUFBRXNCLDRCQUFQLENBQXZDO0FBQ0EsTUFBTUMsc0VBQWdDQyxJQUFELElBQWU7QUFDekQ7QUFDQTtBQUNBLFNBQU9ILCtCQUErQkcsSUFBL0IsS0FBd0NQLDJCQUEyQk8sS0FBS0MsV0FBaEMsQ0FBL0M7QUFDRCxDQUpNOztBQU1BLE1BQU1DLDBEQUF5QkgsNEJBQS9COztBQUVBLE1BQU1JLHdEQUF3QjFCLEVBQUVFLEVBQUYsQ0FBS0gsRUFBRTRCLG1CQUFQLENBQTlCO0FBQ0EsTUFBTUMsa0RBQXFCNUIsRUFBRUUsRUFBRixDQUFLSCxFQUFFOEIsZ0JBQVAsQ0FBM0IiLCJmaWxlIjoic3dlZXQtc3BlYy11dGlscy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5cbmltcG9ydCAqIGFzIFQgZnJvbSAnc3dlZXQtc3BlYyc7XG5pbXBvcnQgKiBhcyBfIGZyb20gJ3JhbWRhJztcblxuZXhwb3J0IGNvbnN0IGlzSW1wb3J0RGVjbGFyYXRpb24gPSBfLmlzKFQuSW1wb3J0RGVjbGFyYXRpb24pO1xuXG5leHBvcnQgY29uc3QgaXNFeHBvcnREZWNsYXJhdGlvbiA9IF8uaXMoVC5FeHBvcnREZWNsYXJhdGlvbik7XG5leHBvcnQgY29uc3QgaXNFeHBvcnQgPSBfLmlzKFQuRXhwb3J0KTtcbmV4cG9ydCBjb25zdCBpc0V4cG9ydERlZmF1bHQgPSBfLmlzKFQuRXhwb3J0RGVmYXVsdCk7XG5leHBvcnQgY29uc3QgaXNFeHBvcnRGcm9tID0gXy5pcyhULkV4cG9ydEZyb20pO1xuXG5leHBvcnQgY29uc3QgaXNWYXJpYWJsZURlY2xhcmF0aW9uID0gXy5pcyhULlZhcmlhYmxlRGVjbGFyYXRpb24pO1xuZXhwb3J0IGNvbnN0IGlzVmFyaWFibGVEZWNsYXJhdG9yID0gXy5pcyhULlZhcmlhYmxlRGVjbGFyYXRvcik7XG5leHBvcnQgY29uc3QgaXNTeW50YXhWYXJpYWJsZURlY2xhcnRpb24gPSBfLmJvdGgoXG4gIGlzVmFyaWFibGVEZWNsYXJhdGlvbiwgXG4gIF8uZWl0aGVyKF8ucHJvcEVxKCdraW5kJywgJ3N5bnRheCcpLFxuICAgICAgICAgICBfLnByb3BFcSgna2luZCcsICdzeW50YXhyZWMnKSkgXG4pO1xuXG5leHBvcnQgY29uc3QgaXNWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50ID0gXy5pcyhULlZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQpO1xuZXhwb3J0IGNvbnN0IGlzU3ludGF4RGVjbGFyYXRpb25TdGF0ZW1lbnQgPSAodGVybTogYW55KSA9PiB7XG4gIC8vIHN5bnRheCBtID0gLi4uXG4gIC8vIHN5bnRheHJlYyBtID0gLi4uXG4gIHJldHVybiBpc1ZhcmlhYmxlRGVjbGFyYXRpb25TdGF0ZW1lbnQodGVybSkgJiYgaXNTeW50YXhWYXJpYWJsZURlY2xhcnRpb24odGVybS5kZWNsYXJhdGlvbik7XG59O1xuXG5leHBvcnQgY29uc3QgaXNDb21waWxldGltZVN0YXRlbWVudCA9IGlzU3ludGF4RGVjbGFyYXRpb25TdGF0ZW1lbnQ7XG5cbmV4cG9ydCBjb25zdCBpc0Z1bmN0aW9uRGVjbGFyYXRpb24gPSBfLmlzKFQuRnVuY3Rpb25EZWNsYXJhdGlvbik7XG5leHBvcnQgY29uc3QgaXNDbGFzc0RlY2xhcmF0aW9uID0gXy5pcyhULkNsYXNzRGVjbGFyYXRpb24pOyJdfQ==