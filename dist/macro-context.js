'use strict';Object.defineProperty(exports,'__esModule',{value:!0}),exports.SyntaxOrTermWrapper=void 0,exports.unwrap=unwrap;var _errors=require('./errors'),_immutable=require('immutable'),_enforester=require('./enforester'),_syntax=require('./syntax'),_ramda=require('ramda'),_=_interopRequireWildcard(_ramda);function _interopRequireWildcard(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&(b[c]=a[c]);return b.default=a,b}const symWrap=Symbol('wrapper'),privateData=new WeakMap,getVal=a=>{return a.match('delimiter')?null:'function'==typeof a.val?a.val():null};class SyntaxOrTermWrapper{constructor(a){let b=1>=arguments.length||arguments[1]===void 0?{}:arguments[1];this[symWrap]=a,this.context=b}from(a,b){let c=this[symWrap];if('function'==typeof c.from)return c.from(a,b)}fromNull(){return this.from('null',null)}fromNumber(a){return this.from('number',a)}fromString(a){return this.from('string',a)}fromPunctuator(a){return this.from('punctuator',a)}fromKeyword(a){return this.from('keyword',a)}fromIdentifier(a){return this.from('identifier',a)}fromRegularExpression(a){return this.from('regularExpression',a)}fromBraces(a){return this.from('braces',a)}fromBrackets(a){return this.from('brackets',a)}fromParens(a){return this.from('parens',a)}match(a,b){let c=this[symWrap];if('function'==typeof c.match)return c.match(a,b)}isIdentifier(a){return this.match('identifier',a)}isAssign(a){return this.match('assign',a)}isBooleanLiteral(a){return this.match('boolean',a)}isKeyword(a){return this.match('keyword',a)}isNullLiteral(a){return this.match('null',a)}isNumericLiteral(a){return this.match('number',a)}isPunctuator(a){return this.match('punctuator',a)}isStringLiteral(a){return this.match('string',a)}isRegularExpression(a){return this.match('regularExpression',a)}isTemplate(a){return this.match('template',a)}isDelimiter(a){return this.match('delimiter',a)}isParens(a){return this.match('parens',a)}isBraces(a){return this.match('braces',a)}isBrackets(a){return this.match('brackets',a)}isSyntaxTemplate(a){return this.match('syntaxTemplate',a)}isEOF(a){return this.match('eof',a)}lineNumber(){return this[symWrap].lineNumber()}val(){return getVal(this[symWrap])}inner(){let a=this[symWrap];if(!a.match('delimiter'))throw new Error('Can only get inner syntax on a delimiter');let b=new _enforester.Enforester(a.inner(),(0,_immutable.List)(),this.context);return new MacroContext(b,'inner',this.context)}}exports.SyntaxOrTermWrapper=SyntaxOrTermWrapper;function unwrap(a){return a instanceof SyntaxOrTermWrapper?a[symWrap]:a}function cloneEnforester(a){const b=a.rest,c=a.prev,d=a.context;return new _enforester.Enforester(b,c,d)}function Marker(){}class MacroContext{constructor(a,b,c,d,e){const f=new Marker,g=cloneEnforester(a),h={name:b,context:c,enf:g,startMarker:f,markers:new Map([[f,a]])};d&&e?(h.noScopes=!1,h.useScope=d,h.introducedScope=e):h.noScopes=!0,privateData.set(this,h),this.reset(),this[Symbol.iterator]=()=>this}name(){var a=privateData.get(this);const b=a.name,c=a.context;return new SyntaxOrTermWrapper(b,c)}expand(a){var b=privateData.get(this);const c=b.enf,d=b.context;if(0===c.rest.size)return{done:!0,value:null};c.expandMacro();let e=c.rest,f;switch(a){case'AssignmentExpression':case'expr':f=c.enforestExpressionLoop();break;case'Expression':f=c.enforestExpression();break;case'Statement':case'stmt':f=c.enforestStatement();break;case'BlockStatement':case'WhileStatement':case'IfStatement':case'ForStatement':case'SwitchStatement':case'BreakStatement':case'ContinueStatement':case'DebuggerStatement':case'WithStatement':case'TryStatement':case'ThrowStatement':case'ClassDeclaration':case'FunctionDeclaration':case'LabeledStatement':case'VariableDeclarationStatement':case'ReturnStatement':case'ExpressionStatement':f=c.enforestStatement(),(0,_errors.expect)(_.whereEq({type:a},f),`Expecting a ${a}`,f,e);break;case'YieldExpression':f=c.enforestYieldExpression();break;case'ClassExpression':f=c.enforestClass({isExpr:!0});break;case'ArrowExpression':f=c.enforestArrowExpression();break;case'NewExpression':f=c.enforestNewExpression();break;case'ThisExpression':case'FunctionExpression':case'IdentifierExpression':case'LiteralNumericExpression':case'LiteralInfinityExpression':case'LiteralStringExpression':case'TemplateExpression':case'LiteralBooleanExpression':case'LiteralNullExpression':case'LiteralRegExpExpression':case'ObjectExpression':case'ArrayExpression':f=c.enforestPrimaryExpression();break;case'UnaryExpression':case'UpdateExpression':case'BinaryExpression':case'StaticMemberExpression':case'ComputedMemberExpression':case'CompoundAssignmentExpression':case'ConditionalExpression':f=c.enforestExpressionLoop(),(0,_errors.expect)(_.whereEq({type:a},f),`Expecting a ${a}`,f,e);break;default:throw new Error('Unknown term type: '+a);}return{done:!1,value:new SyntaxOrTermWrapper(f,d)}}_rest(a){const b=privateData.get(this);if(b.markers.get(b.startMarker)===a)return b.enf.rest;throw Error('Unauthorized access!')}reset(a){const b=privateData.get(this);let c;if(null==a)c=b.markers.get(b.startMarker);else if(!(a&&a instanceof Marker))throw new Error('marker must be an instance of Marker');else if(b.markers.has(a))c=b.markers.get(a);else throw new Error('marker must originate from this context');b.enf=cloneEnforester(c)}mark(){const a=privateData.get(this);let b;return a.enf.rest===a.markers.get(a.startMarker).rest?b=a.startMarker:a.enf.rest.isEmpty()?(!a.endMarker&&(a.endMarker=new Marker),b=a.endMarker):b=new Marker,a.markers.has(b)||a.markers.set(b,cloneEnforester(a.enf)),b}next(){var a=privateData.get(this);const b=a.enf,c=a.noScopes,d=a.useScope,e=a.introducedScope,f=a.context;if(0===b.rest.size)return{done:!0,value:null};let g=b.advance();return c||(g=g.addScope(d,f.bindings,_syntax.ALL_PHASES).addScope(e,f.bindings,_syntax.ALL_PHASES,{flip:!0})),{done:!1,value:new SyntaxOrTermWrapper(g,f)}}}exports.default=MacroContext;

